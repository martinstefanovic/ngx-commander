import { Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@ng-icons/core";
import * as i3 from "@angular/router";
import * as i4 from "../../common/ui/tooltip/tooltip.directive";
export class SidebarItemComponent {
    constructor() {
        this.showIcon = true;
        this.isSidebarClosed = false;
        innerWidth = window.innerWidth;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.3", ngImport: i0, type: SidebarItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.3", type: SidebarItemComponent, selector: "app-sidebar-item", inputs: { item: "item", showIcon: "showIcon", isSidebarClosed: "isSidebarClosed" }, ngImport: i0, template: "<ng-container *ngIf=\"item?.path\">\n  <div\n    class=\"sidebar-single-item\"\n    [class.closed-sidebar]=\"isSidebarClosed\"\n    [routerLink]=\"item.path\"\n    routerLinkActive=\"active\"\n    [appTooltip]=\"item.title\"\n    [disableTooltip]=\"!isSidebarClosed\"\n  >\n    <ng-icon *ngIf=\"showIcon\" size=\"15\" class=\"icon\" [name]=\"item.icon\"></ng-icon>\n    <span class=\"item-title\"> {{ item.title }} </span>\n  </div>\n</ng-container>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.NgIcon, selector: "ng-icon", inputs: ["name", "size", "strokeWidth", "color"] }, { kind: "directive", type: i3.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i3.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "directive", type: i4.TooltipDirective, selector: "[appTooltip]", inputs: ["appTooltip", "disableTooltip"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.3", ngImport: i0, type: SidebarItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-sidebar-item', encapsulation: ViewEncapsulation.None, template: "<ng-container *ngIf=\"item?.path\">\n  <div\n    class=\"sidebar-single-item\"\n    [class.closed-sidebar]=\"isSidebarClosed\"\n    [routerLink]=\"item.path\"\n    routerLinkActive=\"active\"\n    [appTooltip]=\"item.title\"\n    [disableTooltip]=\"!isSidebarClosed\"\n  >\n    <ng-icon *ngIf=\"showIcon\" size=\"15\" class=\"icon\" [name]=\"item.icon\"></ng-icon>\n    <span class=\"item-title\"> {{ item.title }} </span>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: () => [], propDecorators: { item: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], isSidebarClosed: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NpZGViYXIvc3JjL2xpYi9jb21wb25lbnRzL3NpZGViYXItaXRlbS9zaWRlYmFyLWl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2lkZWJhci9zcmMvbGliL2NvbXBvbmVudHMvc2lkZWJhci1pdGVtL3NpZGViYXItaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBUXBFLE1BQU0sT0FBTyxvQkFBb0I7SUFNL0I7UUFKUyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWhCLG9CQUFlLEdBQVksS0FBSyxDQUFDO1FBR3hDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBQ2pDLENBQUM7OEdBUlUsb0JBQW9CO2tHQUFwQixvQkFBb0IsNElDUmpDLHFjQWFBOzsyRkRMYSxvQkFBb0I7a0JBTmhDLFNBQVM7K0JBQ0Usa0JBQWtCLGlCQUdiLGlCQUFpQixDQUFDLElBQUk7d0RBRzVCLElBQUk7c0JBQVosS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUVHLGVBQWU7c0JBQXZCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtc2lkZWJhci1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpZGViYXItaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3NpZGViYXItaXRlbS5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBTaWRlYmFySXRlbUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGl0ZW0/OiBhbnk7XG4gIEBJbnB1dCgpIHNob3dJY29uID0gdHJ1ZTtcbiAgaW5uZXJXaWR0aD86IG51bWJlcjtcbiAgQElucHV0KCkgaXNTaWRlYmFyQ2xvc2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaW5uZXJXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbT8ucGF0aFwiPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJzaWRlYmFyLXNpbmdsZS1pdGVtXCJcbiAgICBbY2xhc3MuY2xvc2VkLXNpZGViYXJdPVwiaXNTaWRlYmFyQ2xvc2VkXCJcbiAgICBbcm91dGVyTGlua109XCJpdGVtLnBhdGhcIlxuICAgIHJvdXRlckxpbmtBY3RpdmU9XCJhY3RpdmVcIlxuICAgIFthcHBUb29sdGlwXT1cIml0ZW0udGl0bGVcIlxuICAgIFtkaXNhYmxlVG9vbHRpcF09XCIhaXNTaWRlYmFyQ2xvc2VkXCJcbiAgPlxuICAgIDxuZy1pY29uICpuZ0lmPVwic2hvd0ljb25cIiBzaXplPVwiMTVcIiBjbGFzcz1cImljb25cIiBbbmFtZV09XCJpdGVtLmljb25cIj48L25nLWljb24+XG4gICAgPHNwYW4gY2xhc3M9XCJpdGVtLXRpdGxlXCI+IHt7IGl0ZW0udGl0bGUgfX0gPC9zcGFuPlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuIl19